{"version":3,"file":"component---src-pages-services-tsx-fa54aa44870711718071.js","mappings":"qLAEO,MCSMA,EAAMC,IAA4D,IAA3D,MAAEC,EAAK,YAAEC,EAAW,SAAEC,EAAQ,SAAEC,GAAqB,EACrE,MACIH,MAAOI,EACPH,YAAaI,EAAkB,QAC/BC,IDZSC,EAAAA,EAAAA,gBAAe,cAYhBC,KAAKC,aCGXC,EAAM,CACRV,MAAOA,GAASI,EAChBH,YAAaA,GAAeI,EAC5BM,IAAM,GAAEL,IAAUJ,GAAa,MAGnC,OACIU,EAAAA,cAAAA,EAAAA,SAAAA,KACIA,EAAAA,cAAAA,QAAAA,KAAQF,EAAIV,OACZY,EAAAA,cAAAA,OAAAA,CAAMC,KAAK,cAAcC,QAASJ,EAAIT,cACtCW,EAAAA,cAAAA,OAAAA,CAAMC,KAAK,gBAAgBC,QAASJ,EAAIV,QACxCY,EAAAA,cAAAA,OAAAA,CAAMC,KAAK,cAAcC,QAASJ,EAAIC,MACtCC,EAAAA,cAAAA,OAAAA,CAAMC,KAAK,sBAAsBC,QAASJ,EAAIT,cAC7CE,EACF,C,6OC3BPY,GAAS,OAAO,MAAO,CACzBC,UAAW,CACTC,QAAS,OACTC,WAAY,SACZC,eAAgB,YAGpBJ,EAAOK,YAAc,SACrB,IAAIC,EAAe,CACjBC,WAAY,CACVC,WAAY,MACZC,UAAW,oBAEbC,SAAU,CACRC,IAAK,MACLF,UAAW,oBAEbG,KAAM,CACJJ,WAAY,MACZG,IAAK,MACLF,UAAW,0B,IAGM,QACnB,SAAyBI,EAAOC,GAC9B,MAAM,KAAEC,EAAO,UAAWC,GAASH,EACnC,OAAuB,IAAAI,KACrB,QACA,CACEH,MACAI,MAAOZ,EAAaS,MACjBC,EACHG,SAAU,YAGhB,I,SCtBK,MAAMC,EAAW,CACpBC,MAAO,WACPpC,MAAO,8BACPC,YACI,mFACJoC,MAAO,CACH,CACIrC,MAAO,qCACPC,YACI,+RACJqC,KAAMC,EAAAA,IAEV,CACIvC,MAAO,kBACPC,YACI,0NACJqC,KAAME,EAAAA,IAEV,CACIxC,MAAO,6BACPC,YACI,kPACJqC,KAAMG,EAAAA,KAEV,CACIzC,MAAO,wBACPC,YACI,+RACJqC,KAAMI,EAAAA,MAGdC,KAAM,CACF,CAAE3C,MAAO,2BAA4B4C,KAAM,eAI7C9B,EAAU,CACZ+B,KAAM,CACF7C,MAAO,6EACP8C,WACI,yHAERC,QAAS,CACLX,MAAO,WACPpC,MAAO,qBACPC,YAAa,gFACboC,MAAO,CACH,CACIrC,MAAO,oBACPC,YAAa,2JACbqC,KAAMU,EAAAA,IACNC,UAAW,YAEf,CACIjD,MAAO,mBACPC,YAAa,sKACbqC,KAAMY,EAAAA,IACND,UAAW,YAEf,CACIjD,MAAO,oBACPC,YAAa,oQACbqC,KAAMa,EAAAA,KAEV,CACInD,MAAO,sBACPC,YAAa,yPACbqC,KAAMc,EAAAA,MAGdT,KAAM,CACF,CAAE3C,MAAO,uBAAwB4C,KAAM,eAG/CT,WACAkB,OAAQ,CACJjB,MAAO,WACPpC,MAAO,2BACPC,YAAa,uGACb0C,KAAM,CACF,CAAE3C,MAAO,uBAAwB4C,KAAM,UACvC,CAAE5C,MAAO,iBAAkB4C,KAAM,eAgC7C,MA3BuC,IAE/BhC,EAAAA,cAAC0C,EAAAA,EAAM,KACH1C,EAAAA,cAAC2C,EAAAA,EAAK,CACFC,QAAS1C,EAAQ+B,KAAK7C,MACtB8C,WAAYhC,EAAQ+B,KAAKC,aAE7BlC,EAAAA,cAAC6C,EAAAA,EAAU,CACPC,QAAS5C,EAAQiC,QACjBY,gBAAgB,SAEhB/C,EAAAA,cAACG,EAAM,KACHH,EAAAA,cAACgD,EAAAA,EAAK,CAACC,OAAQ,CAAEC,KAAM,QAASC,GAAI,SAAWC,IAAI,2CAG3DpD,EAAAA,cAAC6C,EAAAA,EAAU,CACPC,QAAS5C,EAAQqB,SACjBwB,gBAAgB,YAEpB/C,EAAAA,cAAC6C,EAAAA,EAAU,CACPC,QAAS5C,EAAQuC,OACjBM,gBAAgB,WAQzB,MAAMM,EAAe,IAAMrD,EAAAA,cAACd,EAAAA,EAAG,K,4LC1HlCoE,GAAU,QAAW,SAAkBtC,EAAOC,GAChD,MAAM,gBACJsC,EAAe,kBACfC,EAAiB,eACjBC,EAAc,iBACdC,EAAgB,YAChBC,EAAW,YACXC,EAAW,YACXC,KACGC,IACD,QAAe,UAAW9C,IACxB,UACJ+C,EAAS,YACTC,EAAc,aAAY,MAC1B3C,KACGF,IACD,QAAiBH,GACfiD,EAAgB,CACpBpD,SAAU,CACR0C,gBAAiBA,GAAmBG,GAAoBC,GAAe,MACvEV,OAAQ,QAEVvC,WAAY,CACV8C,kBAAmBA,GAAqBC,GAAkBE,GAAe,MACzEO,MAAO,SAGX,OAAuB,IAAA9C,KACrB,OACA,CACEH,MACA,mBAAoB+C,KACjB7C,EACHE,MAAO,IACFyC,EACHK,OAAQ,IACRN,cACAD,iBACGK,EAAcD,MACd3C,GAEL0C,WAAW,IAAAK,IAAG,iBAAkBL,IAGtC,IACAT,EAAQ9C,YAAc,U,uDC3CjB6D,EAAoBC,IAAiB,OAAc,CACtDrE,KAAM,oBACNsE,aAAc,oGAEZC,GAAO,QAAW,SAAexD,EAAOC,GAC1C,MAAM6C,GAAS,QAAoB,OAAQ9C,IACrC,SACJzB,EAAQ,UACRkF,EAAY,OAAM,cAClBC,EAAa,QACbC,KACGxD,IACD,QAAiBH,GACf4D,GAAgB,OAAiBrF,GAEjCsF,EAAeF,EAAU,CAAE,kCAAY,CAAEG,GAAIH,IAAc,CAAC,EAClE,OAAuB,IAAAvD,KAAIiD,EAAoB,CAAEU,MAAOjB,EAAQvE,UAA0B,IAAA6B,KACxF,OACA,CACEH,MACA+D,cAAeP,EACfQ,kBAAmBP,EACnBQ,KAAM,OACN7D,MAAO,IAAKyC,EAAOqB,aAAcN,MAC9B1D,EACH5B,SAAUqF,KAGhB,IACAJ,EAAKhE,YAAc,QACD,QAAW,CAACQ,EAAOC,KACnC,MAAM,GAAEmE,KAAOjE,GAASH,EACxB,OAAuB,IAAAI,KAAIoD,EAAM,CAAEvD,MAAKmE,GAAI,KAAMX,UAAW,UAAWY,YAAa,SAAUlE,GAAO,IAE5FX,YAAc,cAC1B,IAAI8E,GAAgB,QAAW,SAAwBtE,EAAOC,GAC5D,MAAM,GAAEmE,KAAOjE,GAASH,EACxB,OAAuB,IAAAI,KAAIoD,EAAM,CAAEvD,MAAKmE,GAAI,KAAMX,UAAW,UAAWY,YAAa,SAAUlE,GACjG,IACAmE,EAAc9E,YAAc,gBAC5B,IAAI+E,GAAW,QAAW,SAAmBvE,EAAOC,GAClD,MAAM6C,EAASQ,IACf,OAAuB,IAAAlD,KAAI,OAAW,CAAEH,SAAQD,EAAOK,MAAOyC,EAAO0B,MACvE,IACAD,EAAS/E,YAAc,YACR,QAAW,SAAmBQ,EAAOC,GAClD,MAAM6C,EAASQ,IACf,OAAuB,IAAAlD,KAAI,IAAM,CAAEH,MAAKiE,KAAM,kBAAmBlE,EAAOK,MAAOyC,EAAOpC,MACxF,IACSlB,YAAc,W,4KCXvB,MAAMN,EAAU,CACZ+B,KAAM,CACF7C,MAAO,WACPC,YACI,4EAERkC,SAAU,CACNnC,MAAO,eACPC,YAAakC,EAAAA,SAAAA,YACbE,MAAOF,EAAAA,SAAAA,OAEXkE,aAAc,CACVrG,MAAO,eACPC,YACI,6EACJoC,MAAO,CACH,CACIrC,MAAO,wBACPC,YACI,wPACJqC,KAAMgE,EAAAA,IACN3D,KAAM,CACF,CACI3C,MAAO,6BACP4C,KAAM,oCAIlB,CACI5C,MAAO,6BACPC,YACI,+QACJqC,KAAMiE,EAAAA,IACN5D,KAAM,CACF,CACI3C,MAAO,4BACP4C,KAAM,yBAIlB,CACI5C,MAAO,wBACPC,YACI,0PACJqC,KAAMkE,EAAAA,IACN7D,KAAM,CACF,CACI3C,MAAO,4BACP4C,KAAM,+BAIlB,CACI5C,MAAO,kBACPC,YACI,wQACJqC,KAAMmE,EAAAA,IACN9D,KAAM,CACF,CACI3C,MAAO,iCACP4C,KAAM,6BAM1B8D,SAAU,CACN1G,MAAO,WACPC,YACI,6KACJ0G,aAAc,CACV,CACI3G,MAAO,oBACPC,YACI,wGACJqC,KAAMG,EAAAA,IACNmE,UAAW,CACP,wBACA,iBACA,gBACA,qBAEJC,IAAK,CACD,CACIC,KAAM,yFACNxE,KAAMyE,EAAAA,KAEV,CACID,KAAM,0HACNxE,KAAM0E,EAAAA,KAEV,CACIF,KAAM,uFACNxE,KAAM2E,EAAAA,KAEV,CACIH,KAAM,6IACNxE,KAAM4E,EAAAA,KAEV,CACIJ,KAAM,wFACNxE,KAAM6E,EAAAA,KAEV,CACIL,KAAM,+EACNxE,KAAM8E,EAAAA,OAIlB,CACIpH,MAAO,2BACPC,YACI,qHACJqC,KAAMG,EAAAA,IACNmE,UAAW,CACP,qDACA,kDACA,yCACA,+BACA,iDACA,+BACA,iCACA,gBAEJC,IAAK,CACD,CACIC,KAAM,4HACNxE,KAAM+E,EAAAA,KAEV,CACIP,KAAM,kGACNxE,KAAMgF,EAAAA,KAEV,CACIR,KAAM,6FACNxE,KAAMiF,EAAAA,KAEV,CACIT,KAAM,+HACNxE,KAAMkF,EAAAA,KAEV,CACIV,KAAM,kFACNxE,KAAMmF,EAAAA,KAEV,CACIX,KAAM,wIACNxE,KAAMoF,EAAAA,OAIlB,CACI1H,MAAO,2BACPC,YACI,mGACJ2G,UAAW,CACP,yCACA,qBACA,qBACA,sBAEJC,IAAK,CACD,CACIC,KAAM,sFACNxE,KAAMqF,EAAAA,KAEV,CACIb,KAAM,8EACNxE,KAAMsF,EAAAA,IAEV,CACId,KAAM,mGACNxE,KAAMuF,EAAAA,KAEV,CACIf,KAAM,6FACNxE,KAAMiF,EAAAA,KAEV,CACIT,KAAM,+GACNxE,KAAMwF,EAAAA,UAiI9B,MAzHuC,IAwG/BlH,EAAAA,cAAC0C,EAAAA,EAAM,KACH1C,EAAAA,cAAC2C,EAAAA,EAAK,CACFC,QAAS1C,EAAQ+B,KAAK7C,MACtB8C,WAAYhC,EAAQ+B,KAAK5C,cAE7BW,EAAAA,cAAC6C,EAAAA,EAAU,CAACC,QAAS5C,EAAQqB,SAAUwB,gBAAgB,YACvD/C,EAAAA,cAAC6C,EAAAA,EAAU,CACPC,QAAS5C,EAAQuF,aACjB1C,gBAAgB,UAEpB/C,EAAAA,cAAC6C,EAAAA,EAAU,CAACC,QAAS5C,EAAQ4F,SAAU/C,gBAAgB,YA/GvD/C,EAAAA,cAACmH,EAAAA,GAAG,KACCjH,EAAQ4F,SAASC,aAAaqB,KAAK5B,GAE5BxF,EAAAA,cAACmH,EAAAA,GAAG,CAACE,GAAI,CAAC,GAAI,KACVrH,EAAAA,cAACsH,EAAAA,EAAO,CACJC,SAAU,CAAC,MAAO,OAClBC,WAAW,WACXH,GAAI,GAEH7B,EAAKpG,OAEVY,EAAAA,cAACsD,EAAO,CAAC+D,GAAI,CAAC,EAAG,KAAM,KACvBrH,EAAAA,cAACyH,EAAAA,EAAU,CAACC,QAAS,CAAC,EAAG,KAAM,GAAI/C,QAAS,GACxC3E,EAAAA,cAACmH,EAAAA,GAAG,KACAnH,EAAAA,cAAC2H,EAAAA,EAAI,CAACJ,SAAU,CAAC,KAAM,MAAOF,GAAI,GAC7B7B,EAAKnG,aAEVW,EAAAA,cAAC2H,EAAAA,EAAI,CACDJ,SAAU,CAAC,KAAM,MACjBK,MAAM,OACNJ,WAAW,WACXH,GAAI,CAAC,EAAG,KAAM,IAAG,aAIrBrH,EAAAA,cAACsF,EAAa,CAACiC,SAAU,CAAC,KAAM,OAC3B/B,EAAKQ,UAAUoB,KAAKS,GACjB7H,EAAAA,cAACuF,EAAQ,KAAEsC,OAIvB7H,EAAAA,cAACmH,EAAAA,GAAG,KACAnH,EAAAA,cAAC2H,EAAAA,EAAI,CACDJ,SAAU,CAAC,KAAM,MACjBK,MAAM,OACNJ,WAAW,WACXH,GAAI,CAAC,EAAG,KAAM,IAAG,YAIrBrH,EAAAA,cAAC8H,EAAAA,EAAM,CAAC5D,MAAM,QACTsB,EAAKS,IAAImB,KAAKnB,GAEPjG,EAAAA,cAACmH,EAAAA,GAAG,CACA9G,QAAQ,OACR0H,QAAQ,QACRC,aAAc,EACd7D,OAAO,MACPN,YAAY,WACZK,MAAM,OACN+D,EAAG,GAEHjI,EAAAA,cAACmH,EAAAA,GAAG,CACAe,UAAU,SACVb,GAAI,CAAEnE,KAAM,EAAGC,GAAI,IAEnBnD,EAAAA,cAACmI,EAAAA,EAAI,CACD/C,GACIa,EAAIvE,MACJG,EAAAA,IAEJuG,QAAS,CACLlF,KAAM,EACNC,GAAI,GAERyE,MAAM,OACNS,GAAI,KAGZrI,EAAAA,cAAC2H,EAAAA,EAAI,KACD3H,EAAAA,cAACsI,EAAAA,EAAa,KACTrC,EAAIC,gBAYjDlG,EAAAA,cAACsD,EAAO,CAAC+D,GAAI,KACbrH,EAAAA,cAACmH,EAAAA,GAAG,KACAnH,EAAAA,cAACuI,EAAAA,EAAM,CACHC,QAAQ,QACRC,KAAK,KACLlB,SAAU,CAAErE,KAAM,KAAMC,GAAI,OAC5BuF,YAAY,OACZtD,GAAIuD,EAAAA,KACJC,GAAG,aAAW,gCA6B/B,MAAMvF,EAAe,IAAMrD,EAAAA,cAACd,EAAAA,EAAG,CAACE,MAAM,oB","sources":["webpack://focus-consulting/./src/hooks/use-site-metadata.tsx","webpack://focus-consulting/./src/components/seo.tsx","webpack://focus-consulting/./node_modules/@chakra-ui/layout/dist/chunk-FAWTVNS3.mjs","webpack://focus-consulting/./src/pages/index.tsx","webpack://focus-consulting/./node_modules/@chakra-ui/layout/dist/chunk-W7WUSNWJ.mjs","webpack://focus-consulting/./node_modules/@chakra-ui/layout/dist/chunk-46CXQZ4E.mjs","webpack://focus-consulting/./src/pages/services.tsx"],"sourcesContent":["import { graphql, useStaticQuery } from 'gatsby'\n\nexport const useSiteMetadata = () => {\n    const data = useStaticQuery(graphql`\n        query {\n            site {\n                siteMetadata {\n                    title\n                    description\n                    siteUrl\n                }\n            }\n        }\n    `)\n\n    return data.site.siteMetadata\n}\n","import React, { ReactNode } from 'react'\n\nimport { useSiteMetadata } from '../hooks/use-site-metadata'\n\ntype IPropsSeo = {\n    title?: string\n    description?: string\n    pathname?: string\n    children?: ReactNode\n}\n\nexport const SEO = ({ title, description, pathname, children }: IPropsSeo) => {\n    const {\n        title: defaultTitle,\n        description: defaultDescription,\n        siteUrl,\n    } = useSiteMetadata()\n\n    const seo = {\n        title: title || defaultTitle,\n        description: description || defaultDescription,\n        url: `${siteUrl}${pathname || ``}`,\n    }\n\n    return (\n        <>\n            <title>{seo.title}</title>\n            <meta name=\"description\" content={seo.description} />\n            <meta name=\"twitter:title\" content={seo.title} />\n            <meta name=\"twitter:url\" content={seo.url} />\n            <meta name=\"twitter:description\" content={seo.description} />\n            {children}\n        </>\n    )\n}\n","'use client'\n\n// src/center.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Center = chakra(\"div\", {\n  baseStyle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\nCenter.displayName = \"Center\";\nvar centerStyles = {\n  horizontal: {\n    insetStart: \"50%\",\n    transform: \"translateX(-50%)\"\n  },\n  vertical: {\n    top: \"50%\",\n    transform: \"translateY(-50%)\"\n  },\n  both: {\n    insetStart: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%, -50%)\"\n  }\n};\nvar AbsoluteCenter = forwardRef(\n  function AbsoluteCenter2(props, ref) {\n    const { axis = \"both\", ...rest } = props;\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ref,\n        __css: centerStyles[axis],\n        ...rest,\n        position: \"absolute\"\n      }\n    );\n  }\n);\n\nexport {\n  Center,\n  AbsoluteCenter\n};\n//# sourceMappingURL=chunk-FAWTVNS3.mjs.map","import * as React from 'react'\n\nimport {\n    FaCode,\n    FaShippingFast,\n    FaPassport,\n    FaFileInvoiceDollar,\n    FaHandshake,\n} from 'react-icons/fa'\nimport { MdOutlineChildFriendly, MdOutlineHealthAndSafety } from \"react-icons/md\";\nimport { TbClockDown } from \"react-icons/tb\";\nimport { HeadFC, PageProps } from 'gatsby';\nimport Hero2 from '../layout/Hero';\nimport Layout from '../layout/Layout';\nimport SectionNew from '../layout/SectionNew';\nimport { SEO } from '../components/seo';\nimport { Center, Image } from '@chakra-ui/react';\n\nexport const approach = {\n    label: 'Approach',\n    title: 'A Focus on Program Outcomes',\n    description:\n        'We never lose sight of program outcomes for our agency partners and their users.',\n    items: [\n        {\n            title: 'Bridging Policy, People, & Process',\n            description:\n                ' Our work involves translating complex government policy into effective services. We take a **Policy-Integrated Delivery** approach to partner with stakeholders and SMEs, and integrate their experience, process, and expertise with technical considerations for better program outcomes.',\n            icon: FaHandshake,\n        },\n        {\n            title: 'Reducing Burden',\n            description:\n                'We take our responsibility of building accessible government services for all users seriously. We center our work on **human-centered design and research** to gain deep insights into end user and agency staff needs.',\n            icon: TbClockDown\n        },        \n        {\n            title: 'The Right Technology Tools',\n            description:\n                'We leverage our extensive technology delivery experience to select the best technology tools for the job at hand. This means using a mix of open source, COTS, custom development, and AI technology options to address your unique challenges.',\n            icon: FaCode,\n        },\n        {\n            title: 'Iterating at Velocity',\n            description:\n                'We prefer working in smaller launch cycles to quickly test, validate, and evolve priority digital service features. Our **senior staff**, **quick hiring process**, and repeatable **agile best practices** allow us to spin up lean teams to deliver critical MVP launches in a few months.',\n            icon: FaShippingFast,\n        },\n    ],\n    ctas: [\n        { title: 'Learn about our Services', path: '/services' }\n    ]\n};\n\nconst content = {\n    hero: {\n        title: 'We partner with government to build highly **impactful** digital services.',\n        subHeading:\n            'We deliver impact by improving access to critical services, modernizing resilient systems, and iterating at velocity.',\n    },\n    ourWork: {\n        label: 'Our Work',\n        title: \"Areas of expertise\",\n        description: \"Our work spans projects across various federal and state government agencies.\",\n        items: [\n            {\n                title: 'Consular Services',\n                description: 'At the *Department of State*, we are building the next generation **Online Passport Renewal** application that can be submitted in *under five minutes*.',\n                icon: FaPassport,\n                iconColor: 'teal.400'\n            },\n            {\n                title: 'Taxpayer Systems',\n                description: 'At the *IRS*, we are modernizing key taxpayer forms like **digitizing the W7**, improving **compliance operations**, and augmenting systems with **generative AI**.',\n                icon: FaFileInvoiceDollar,\n                iconColor: 'teal.400'\n            },\n            {\n                title: 'Benefits Programs',\n                description: \"We helped launch the **Massachusetts Paid Family & Medical Leave** system, which has paid claimants over *$3 billion* since 2021. Currently supporting **Minnesota's Paid Leave** implementation, and modernizing **New Jersey's Unemployment Insurance** system.\",\n                icon: MdOutlineChildFriendly,\n            },\n            {\n                title: 'Healthcare Services',\n                description: \"At the *CDC*, we're enhancing the pandemic era **test reporting system (ReportStream)** to support various test types. At *CMS* we are supporting the evolution of **HealthCare.gov** and supporting their **Infrastructure as a Service** initiative.\",\n                icon: MdOutlineHealthAndSafety,\n            }\n        ],\n        ctas: [\n            { title: 'Learn about our Work', path: '/our-work' }\n        ]\n    },\n    approach,\n    talent: {\n        label: 'About Us',\n        title: 'Talent to deliver Impact',\n        description: 'We bring a unique set of industry expertise and agile best practices to government digital services.',\n        ctas: [\n            { title: 'Our Values & Culture', path: '/about' },\n            { title: 'Join our Team ', path: '/careers' },\n        ]\n    }\n}\n\nconst IndexPage: React.FC<PageProps> = () => {\n    return (\n        <Layout>\n            <Hero2\n                heading={content.hero.title}\n                subHeading={content.hero.subHeading}\n            />            \n            <SectionNew\n                section={content.ourWork}\n                backgroundColor=\"white\"\n            >   \n                <Center>\n                    <Image height={{ base: '100px', md: '200px' }} src=\"/images/index/focus-client-logos.png\" />                 \n                </Center>               \n            </SectionNew>\n            <SectionNew\n                section={content.approach}                \n                backgroundColor=\"gray.50\"\n            />\n            <SectionNew\n                section={content.talent}                \n                backgroundColor=\"white\"\n            />\n        </Layout>\n    )\n}\n\nexport default IndexPage\n\nexport const Head: HeadFC = () => <SEO />\n","'use client'\n\n// src/divider.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Divider = forwardRef(function Divider2(props, ref) {\n  const {\n    borderLeftWidth,\n    borderBottomWidth,\n    borderTopWidth,\n    borderRightWidth,\n    borderWidth,\n    borderStyle,\n    borderColor,\n    ...styles\n  } = useStyleConfig(\"Divider\", props);\n  const {\n    className,\n    orientation = \"horizontal\",\n    __css,\n    ...rest\n  } = omitThemingProps(props);\n  const dividerStyles = {\n    vertical: {\n      borderLeftWidth: borderLeftWidth || borderRightWidth || borderWidth || \"1px\",\n      height: \"100%\"\n    },\n    horizontal: {\n      borderBottomWidth: borderBottomWidth || borderTopWidth || borderWidth || \"1px\",\n      width: \"100%\"\n    }\n  };\n  return /* @__PURE__ */ jsx(\n    chakra.hr,\n    {\n      ref,\n      \"aria-orientation\": orientation,\n      ...rest,\n      __css: {\n        ...styles,\n        border: \"0\",\n        borderColor,\n        borderStyle,\n        ...dividerStyles[orientation],\n        ...__css\n      },\n      className: cx(\"chakra-divider\", className)\n    }\n  );\n});\nDivider.displayName = \"Divider\";\n\nexport {\n  Divider\n};\n//# sourceMappingURL=chunk-W7WUSNWJ.mjs.map","'use client'\n\n// src/list.tsx\nimport { Icon } from \"@chakra-ui/icon\";\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [ListStylesProvider, useListStyles] = createContext({\n  name: `ListStylesContext`,\n  errorMessage: `useListStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<List />\" `\n});\nvar List = forwardRef(function List2(props, ref) {\n  const styles = useMultiStyleConfig(\"List\", props);\n  const {\n    children,\n    styleType = \"none\",\n    stylePosition,\n    spacing,\n    ...rest\n  } = omitThemingProps(props);\n  const validChildren = getValidChildren(children);\n  const selector = \"& > *:not(style) ~ *:not(style)\";\n  const spacingStyle = spacing ? { [selector]: { mt: spacing } } : {};\n  return /* @__PURE__ */ jsx(ListStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n    chakra.ul,\n    {\n      ref,\n      listStyleType: styleType,\n      listStylePosition: stylePosition,\n      role: \"list\",\n      __css: { ...styles.container, ...spacingStyle },\n      ...rest,\n      children: validChildren\n    }\n  ) });\n});\nList.displayName = \"List\";\nvar OrderedList = forwardRef((props, ref) => {\n  const { as, ...rest } = props;\n  return /* @__PURE__ */ jsx(List, { ref, as: \"ol\", styleType: \"decimal\", marginStart: \"1em\", ...rest });\n});\nOrderedList.displayName = \"OrderedList\";\nvar UnorderedList = forwardRef(function UnorderedList2(props, ref) {\n  const { as, ...rest } = props;\n  return /* @__PURE__ */ jsx(List, { ref, as: \"ul\", styleType: \"initial\", marginStart: \"1em\", ...rest });\n});\nUnorderedList.displayName = \"UnorderedList\";\nvar ListItem = forwardRef(function ListItem2(props, ref) {\n  const styles = useListStyles();\n  return /* @__PURE__ */ jsx(chakra.li, { ref, ...props, __css: styles.item });\n});\nListItem.displayName = \"ListItem\";\nvar ListIcon = forwardRef(function ListIcon2(props, ref) {\n  const styles = useListStyles();\n  return /* @__PURE__ */ jsx(Icon, { ref, role: \"presentation\", ...props, __css: styles.icon });\n});\nListIcon.displayName = \"ListIcon\";\n\nexport {\n  useListStyles,\n  List,\n  OrderedList,\n  UnorderedList,\n  ListItem,\n  ListIcon\n};\n//# sourceMappingURL=chunk-46CXQZ4E.mjs.map","import * as React from 'react'\n\nimport {\n    Box,\n    Button,\n    Link as ChakraLink,\n    Divider,\n    Heading,\n    Icon,\n    ListItem,\n    SimpleGrid,\n    Stack,\n    Text,\n    UnorderedList,\n    VStack,\n} from '@chakra-ui/react'\nimport { FaBalanceScale, FaCode, FaDatabase, FaDigitalTachograph, FaRegComments, FaRobot, FaShieldAlt } from 'react-icons/fa'\nimport { FaChartLine, FaDownload } from 'react-icons/fa6'\nimport { HeadFC, Link, PageProps } from 'gatsby'\n\nimport {\n    MdComputer,\n    MdOutlineCloudUpload,\n    MdOutlineDesignServices,\n    MdOutlineLanguage,\n    MdOutlineRocketLaunch,\n    MdScreenSearchDesktop,\n} from 'react-icons/md'\nimport {\n    TbArrowGuide,\n    TbBrandOpenSource,\n    TbBuilding,\n    TbBuildingBank,\n    TbUsersGroup,\n} from 'react-icons/tb'\n\nimport { AiOutlineAlert } from 'react-icons/ai'\nimport { FiHeart } from 'react-icons/fi'\nimport { GiCongress } from 'react-icons/gi'\nimport Hero2 from '../layout/Hero'\nimport { HiOutlineDocumentText } from 'react-icons/hi'\nimport Layout from '../layout/Layout'\nimport { MdOutlinePolicy } from 'react-icons/md'\nimport ReactMarkdown from 'react-markdown'\nimport { RiPassValidLine } from 'react-icons/ri'\nimport { SEO } from '../components/seo'\nimport Section from '../layout/Section'\nimport SectionNew from '../layout/SectionNew'\nimport { TiFlowSwitch } from 'react-icons/ti'\nimport { approach } from './index'\n\nconst content = {\n    hero: {\n        title: 'Services',\n        description:\n            'Let us help you unlock more value and impact from your digital services.',\n    },\n    approach: {\n        title: 'Our Approach',\n        description: approach.description,\n        items: approach.items\n    },\n    capabilities: {\n        title: 'Capabilities',\n        description:\n            'We bring a strong set of capabilities to modern digital services delivery.',\n        items: [\n            {\n                title: 'Digital Modernization',\n                description:\n                    'We have deep expertise modernizing legacy systems by **building next versions in parallel** or **enhancing live systems in place**. In each case, our approach prioritizes de-risking delivery by addressing end-to-end integration challenges first.',\n                icon: FaDigitalTachograph,\n                ctas: [\n                    {\n                        title: 'See Modernization Projects',\n                        path: '/our-work?filter=modernization',\n                    },\n                ],\n            },\n            {\n                title: 'AI & Emerging Technologies',\n                description:\n                    'Our staff bring varied experience in **machine learning**, **large language models (LLMs)**, and **generative AI**. In our current work we are using AI to assist users with application forms, language translations, fraud detection, and increasing development velocity.',\n                icon: FaRobot,\n                ctas: [\n                    {\n                        title: 'See AI Supported Projects',\n                        path: '/our-work?filter=ai',\n                    },\n                ],\n            },\n            {\n                title: 'Security & Compliance',\n                description:\n                    'We embed security into every stage of the software development lifecycle, ensuring compliance and resilience from day one. With a **zero-trust approach**, we safeguard systems while enabling secure, efficient delivery of mission-critical software.',\n                icon: FaShieldAlt,\n                ctas: [\n                    {\n                        title: 'See Security Case Studies',\n                        path: '/our-work?filter=security',\n                    },\n                ],\n            },\n            {\n                title: 'Enterprise Data',\n                description:\n                    'We specialize in building and scaling ETL processes that streamline data integration, ensuring reliable, high-quality insights. Our expertise in **data management and governance** enables secure, compliant, and efficient data operations for government agencies.',\n                icon: FaDatabase,\n                ctas: [\n                    {\n                        title: 'See Data Pipeline Case Studies',\n                        path: '/our-work?filter=data',\n                    },\n                ],\n            },\n        ],\n    },\n    services: {\n        title: 'Services',\n        description:\n            'Our services aim to identify program and user challenges, integrate user research and testing with policy expertise, and deliver digital services that meet program goals.',\n        servicesList: [\n            {\n                title: 'Research & Design',\n                description:\n                    'We lead our work with human-centered design and research to gain deep understanding of program needs.',\n                icon: FaCode,\n                expertise: [\n                    'Human-Centered Design',\n                    'Service Design',\n                    'User Research',\n                    'Usability Testing',\n                ],\n                how: [\n                    {\n                        text: 'Collaborate with **agency and community experts** to integrate policy with technology.',\n                        icon: MdOutlinePolicy,\n                    },\n                    {\n                        text: 'Create a **service blueprint** and **user journey maps** to gain deep insights into existing user and agency workflows.',\n                        icon: TiFlowSwitch,\n                    },\n                    {\n                        text: '**Equitable user recruitment** practices to ensure accessible systems for all users.',\n                        icon: FaBalanceScale,\n                    },\n                    {\n                        text: 'Develop detailed **research and testing plans** to engage various user profiles early through **interviews** and **clickable prototypes**.',\n                        icon: MdComputer,\n                    },\n                    {\n                        text: '**Rapid prototyping** and **usability testing** to identify application issues early.',\n                        icon: RiPassValidLine,\n                    },\n                    {\n                        text: '**Continuous usability testing** to enable incremental delivery post-launch.',\n                        icon: MdOutlineRocketLaunch,\n                    },\n                ],\n            },\n            {\n                title: 'Engineering & Technology',\n                description:\n                    'Our pragmatic approach leverages our extensive experience to select the best technology tools for the job at hand.',\n                icon: FaCode,\n                expertise: [\n                    'Systems that scale from pilot to millions of users',\n                    'Government modernization or greenfield projects',\n                    'Full-stack web application development',\n                    'Working with large data sets',\n                    'Cloud modernization (AWS, Azure, Google Cloud)',\n                    'Cloud infrastructure as code',\n                    'DevSecOps and site reliability',\n                    'Automated QA',\n                ],\n                how: [\n                    {\n                        text: 'Use **well supported**, and preferably **open-source** tools to let our teams focus on program specific workflows sooner.',\n                        icon: TbBrandOpenSource,\n                    },\n                    {\n                        text: '**Deploy early to the cloud** with **robust CI/CD** to create environments for rapid iteration.',\n                        icon: MdOutlineCloudUpload,\n                    },\n                    {\n                        text: '**Well-documented technical specs** and **APIs** to ease collaboration with product folks.',\n                        icon: HiOutlineDocumentText,\n                    },\n                    {\n                        text: 'Use **design systems** and **application templates** to quickly build on top of shared standards that address accessibility.',\n                        icon: MdOutlineDesignServices,\n                    },\n                    {\n                        text: 'Use **plain language** to communicate with clarity and simplify user workflows.',\n                        icon: MdOutlineLanguage,\n                    },\n                    {\n                        text: 'Embed **system monitoring** and **security engineering** into development to consistently protect user privacy and policy compliance.',\n                        icon: AiOutlineAlert,\n                    },\n                ],\n            },\n            {\n                title: 'Product & Agile Delivery',\n                description:\n                    'Our product and project managers build stakeholder trust by consistently reducing delivery risk.',\n                expertise: [\n                    'Agile Technology Planning and Delivery',\n                    'Product Management',\n                    'Project Management',\n                    'Program Management',\n                ],\n                how: [\n                    {\n                        text: 'Conduct stakeholder **listening sessions** at kickoff to craft high value roadmaps.',\n                        icon: FaRegComments,\n                    },\n                    {\n                        text: 'Define and track **success metrics** to make data-driven product decisions.',\n                        icon: FaChartLine,\n                    },\n                    {\n                        text: 'Work on **program unknowns** and a **simplified end-to-end workflow** first to de-risk delivery.',\n                        icon: TbArrowGuide,\n                    },\n                    {\n                        text: '**Strong documentation culture** to work efficiently in an increasingly distributed world.',\n                        icon: HiOutlineDocumentText,\n                    },\n                    {\n                        text: 'Foster a **one-team culture** across vendors and our stakeholders to move at velocity during implementation.',\n                        icon: TbUsersGroup,\n                    },\n                ],\n            },\n        ],\n    },\n}\n\nconst AboutPage: React.FC<PageProps> = () => {\n    const renderServices = () => {\n        return (\n            <Box>\n                {content.services.servicesList.map((item: any) => {\n                    return (\n                        <Box mb={[12, 16]}>\n                            <Heading\n                                fontSize={['2xl', '3xl']}\n                                fontWeight=\"semibold\"\n                                mb={2}\n                            >\n                                {item.title}\n                            </Heading>\n                            <Divider mb={[3, null, 5]} />\n                            <SimpleGrid columns={[1, null, 2]} spacing={5}>\n                                <Box>\n                                    <Text fontSize={['lg', 'xl']} mb={5}>\n                                        {item.description}\n                                    </Text>\n                                    <Text\n                                        fontSize={['md', 'lg']}\n                                        color=\"teal\"\n                                        fontWeight=\"semibold\"\n                                        mb={[2, null, 3]}\n                                    >\n                                        Expertise\n                                    </Text>\n                                    <UnorderedList fontSize={['lg', 'xl']}>\n                                        {item.expertise.map((exp: any) => (\n                                            <ListItem>{exp}</ListItem>\n                                        ))}\n                                    </UnorderedList>\n                                </Box>\n                                <Box>\n                                    <Text\n                                        fontSize={['md', 'lg']}\n                                        color=\"teal\"\n                                        fontWeight=\"semibold\"\n                                        mb={[2, null, 3]}\n                                    >\n                                        Approach\n                                    </Text>\n                                    <VStack width=\"100%\">\n                                        {item.how.map((how: any) => {\n                                            return (\n                                                <Box\n                                                    display=\"flex\"\n                                                    bgColor=\"white\"\n                                                    borderRadius={6}\n                                                    border=\"1px\"\n                                                    borderColor=\"gray.200\"\n                                                    width=\"100%\"\n                                                    p={3}\n                                                >\n                                                    <Box\n                                                        alignSelf=\"center\"\n                                                        mb={{ base: 1, md: 1 }}\n                                                    >\n                                                        <Icon\n                                                            as={\n                                                                how.icon ||\n                                                                FaCode\n                                                            }\n                                                            boxSize={{\n                                                                base: 6,\n                                                                md: 6,\n                                                            }}\n                                                            color=\"teal\"\n                                                            mr={5}\n                                                        />\n                                                    </Box>\n                                                    <Text>\n                                                        <ReactMarkdown>\n                                                            {how.text}\n                                                        </ReactMarkdown>\n                                                    </Text>\n                                                </Box>\n                                            )\n                                        })}\n                                    </VStack>\n                                </Box>\n                            </SimpleGrid>\n                        </Box>\n                    )\n                })}\n                <Divider mb={25} />\n                <Box>\n                    <Button\n                        variant=\"solid\"\n                        size=\"lg\"\n                        fontSize={{ base: 'xl', md: '2xl' }}\n                        colorScheme=\"blue\"\n                        as={Link}\n                        to=\"/our-work\"\n                    >\n                        See Examples of Our Work\n                    </Button>\n                </Box>\n            </Box>\n        )\n    }\n\n    return (\n        <Layout>\n            <Hero2\n                heading={content.hero.title}\n                subHeading={content.hero.description}\n            />\n            <SectionNew section={content.approach} backgroundColor=\"gray.50\" />\n            <SectionNew\n                section={content.capabilities}\n                backgroundColor=\"white\"\n            />\n            <SectionNew section={content.services} backgroundColor=\"green.50\">\n                {renderServices()}\n            </SectionNew>\n        </Layout>\n    )\n}\n\nexport default AboutPage\n\nexport const Head: HeadFC = () => <SEO title=\"Focus - Services\" />\n\n// sections: [\n//     {\n//         title: 'Who We Work With',\n//         description:\n//             'We work across various levels of government and industries to provide our deep expertise in digital services.',\n//         backgroundColor: 'white',\n//         items: [\n//             {\n//                 title: 'Federal Government',\n//                 description:\n//                     'We bring our diverse technology expertise to modernization and greenfield projects at federal government agencies.',\n//                 icon: GiCongress,\n//                 iconColor: 'green.700',\n//             },\n//             {\n//                 title: 'Local & State Government',\n//                 description:\n//                     'We strive to bring our experience in building benefits, equity, and healthcare systems to similar initiatives in other states and cities.',\n//                 icon: TbBuildingBank,\n//                 iconColor: 'green.700',\n//             },\n//             {\n//                 title: 'Industry',\n//                 description:\n//                     'Our staff bring experience working in various industries including healthcare, early education, higher and corporate education, and workforce development.',\n//                 icon: TbBuilding,\n//                 iconColor: 'green.700',\n//             },\n//             {\n//                 title: 'Non-Profits & Civic Tech',\n//                 description:\n//                     'We are committed to continuing our support for local civic tech and open source communities.',\n//                 icon: FiHeart,\n//                 iconColor: 'green.700',\n//             },\n//         ],\n//     },\n// ],\n"],"names":["SEO","_ref","title","description","pathname","children","defaultTitle","defaultDescription","siteUrl","useStaticQuery","site","siteMetadata","seo","url","React","name","content","Center","baseStyle","display","alignItems","justifyContent","displayName","centerStyles","horizontal","insetStart","transform","vertical","top","both","props","ref","axis","rest","jsx","__css","position","approach","label","items","icon","FaHandshake","TbClockDown","FaCode","FaShippingFast","ctas","path","hero","subHeading","ourWork","FaPassport","iconColor","FaFileInvoiceDollar","MdOutlineChildFriendly","MdOutlineHealthAndSafety","talent","Layout","Hero2","heading","SectionNew","section","backgroundColor","Image","height","base","md","src","Head","Divider","borderLeftWidth","borderBottomWidth","borderTopWidth","borderRightWidth","borderWidth","borderStyle","borderColor","styles","className","orientation","dividerStyles","width","border","cx","ListStylesProvider","useListStyles","errorMessage","List","styleType","stylePosition","spacing","validChildren","spacingStyle","mt","value","listStyleType","listStylePosition","role","container","as","marginStart","UnorderedList","ListItem","item","capabilities","FaDigitalTachograph","FaRobot","FaShieldAlt","FaDatabase","services","servicesList","expertise","how","text","MdOutlinePolicy","TiFlowSwitch","FaBalanceScale","MdComputer","RiPassValidLine","MdOutlineRocketLaunch","TbBrandOpenSource","MdOutlineCloudUpload","HiOutlineDocumentText","MdOutlineDesignServices","MdOutlineLanguage","AiOutlineAlert","FaRegComments","FaChartLine","TbArrowGuide","TbUsersGroup","Box","map","mb","Heading","fontSize","fontWeight","SimpleGrid","columns","Text","color","exp","VStack","bgColor","borderRadius","p","alignSelf","Icon","boxSize","mr","ReactMarkdown","Button","variant","size","colorScheme","Link","to"],"sourceRoot":""}