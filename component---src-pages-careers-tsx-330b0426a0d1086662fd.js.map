{"version":3,"file":"component---src-pages-careers-tsx-330b0426a0d1086662fd.js","mappings":"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","sources":["webpack://focus-consulting/./src/layout/Section.tsx","webpack://focus-consulting/./src/pages/careers.tsx","webpack://focus-consulting/./node_modules/@chakra-ui/layout/dist/chunk-46CXQZ4E.mjs","webpack://focus-consulting/./node_modules/@chakra-ui/layout/dist/chunk-K7XRJ7NL.mjs"],"sourcesContent":["import {\n  Box,\n  Heading,\n  ButtonGroup,\n  Container,\n  SimpleGrid,\n  Stack,\n  IconButton,\n  Text,\n  useBreakpointValue,\n  useColorModeValue,\n  UnorderedList,\n  ListItem,\n} from '@chakra-ui/react'\nimport * as React from 'react'\nimport { FiMenu } from 'react-icons/fi'\nimport { Icon } from '@chakra-ui/react'\n\ninterface MainProps {\n  title: string,\n  description?: string,\n  items?: { title: string, description?: string | string[], bulletPoints?: string[], icon? : any, iconColor?: string }[], \n  backgroundColor?: string,\n  fontColor?: string,\n  anchor?: string,\n  children: any,\n}\n\nconst Section = ({ title, description, items, backgroundColor, fontColor, anchor, children }: MainProps) => {\n  const props: any = {}\n\n  if (backgroundColor) props['bg'] = backgroundColor;\n  if (fontColor) props['color'] = fontColor;\n  if (anchor) props['id'] = anchor;\n  \n  const renderItems = () => {\n    if (items === undefined || items.length === 0) {\n      return null;\n    }    \n\n    const iconColor = backgroundColor ? fontColor : 'gray.600';\n\n    return items.map((value) => {\n      return (\n        <Box>\n          {value.icon && (\n            <Box mb={{ base: 1, md: 1 }}><Icon as={value.icon} boxSize={{ base: 9, md: 9 }} color={value.iconColor || iconColor} /></Box>\n          )}\n          <Heading fontSize={{ 'base': '3xl', 'md': '3xl' }} fontWeight=\"semibold\" mb={2}>{value.title}</Heading>\n          {Array.isArray(value.description) ? (\n            <Stack direction=\"column\" spacing={{ base: 6, md: 6 }}>\n              {value.description.map(paragraph => (<Text fontSize=\"xl\">{paragraph}</Text>))}\n            </Stack>\n          ) : (\n            <Text fontSize=\"xl\">{value.description}</Text>\n          )}\n          {value.bulletPoints && (\n            <UnorderedList fontSize=\"xl\">\n              {value.bulletPoints.map(bulletPoint => <ListItem>{bulletPoint}</ListItem>)}\n            </UnorderedList>\n          )}                   \n        </Box>      \n      );\n    });\n  }\n\n  return (    \n    <Box\n      as=\"section\"\n      py={{ base: 16, md: 12}}\n      { ...props }\n    >\n      <Container maxW=\"6xl\" px={{ base: 5, md: 0 }}>\n        <Box width={{ base: '100%', md: '75%' }} mb={{ base: 8, md: 12}}>\n          <Heading fontSize={{ base: '4xl', md: '5xl' }} fontWeight=\"extrabold\" mb={{ base: 1, md: 2}}>{title}</Heading>\n          {description && <Text fontSize={{ base: 'lg', md: 'xl' }} color=\"muted\">{description}</Text>}          \n        </Box>\n        {items && (\n          <Box mb={{ base: 8, md: 12}}>\n            <SimpleGrid columns={{ base: 1, md: 2 }} spacing={{ base: 8, md: 16 }}>\n              {renderItems()}\n            </SimpleGrid>\n          </Box>          \n        )}\n        <Box mb={{ base: 8, md: 12}}>\n          {children}\n        </Box>        \n      </Container>\n    </Box>\n  )\n}\n\nexport default Section;","import * as React from 'react'\n\nimport { Button, Heading, Link, Stack } from '@chakra-ui/react'\nimport { HeadFC, PageProps } from 'gatsby'\n\nimport Hero2 from '../layout/Hero'\nimport Layout from '../layout/Layout'\nimport { SEO } from '../components/seo'\nimport Section from '../layout/Section'\n\nconst content = {\n    heroTitle: 'Careers',\n    heroDescription:\n        'We are a small, distributed, and growing team of talented technologists. We put diversity & inclusion at the heart of our values and work. Weâ€™re building a company that helps the government be more accessible to its people.',\n}\n\nconst IndexPage: React.FC<PageProps> = () => {\n    return (\n        <Layout>\n            <Hero2\n                heading={\n                    <Heading\n                        as=\"h1\"\n                        color=\"white\"\n                        fontSize={'7xl'}\n                        fontWeight={700}\n                        lineHeight={'120%'}\n                        mb=\"6\"\n                    >\n                        {content.heroTitle}\n                    </Heading>\n                }\n                subHeading={content.heroDescription}\n            />\n            <Section title=\"Join the team.\" backgroundColor=\"white\">\n                <Stack align=\"start\" spacing=\"4\">\n                    <Button\n                        variant=\"link\"\n                        fontSize={{ base: '2xl', md: '2xl' }}\n                        textDecoration=\"underline\"\n                        as={Link}\n                        isExternal\n                        href=\"https://guiltless-jellyfish-358.notion.site/Focus-Consulting-Interview-Process-Fullstack-Engineer-fe06d8e8be854f38b466b6278ae82772\"\n                    >\n                        Hiring Process\n                    </Button>\n                    <Button\n                        variant=\"link\"\n                        fontSize={{ base: '2xl', md: '2xl' }}\n                        textDecoration=\"underline\"\n                        as={Link}\n                        isExternal\n                        href=\"https://angel.co/company/focus-consulting-1/jobs\"\n                    >\n                        View Open Positions\n                    </Button>\n                </Stack>\n            </Section>\n        </Layout>\n    )\n}\n\nexport default IndexPage\n\nexport const Head: HeadFC = () => <SEO title=\"Focus - Careers\" />\n","'use client'\n\n// src/list.tsx\nimport { Icon } from \"@chakra-ui/icon\";\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [ListStylesProvider, useListStyles] = createContext({\n  name: `ListStylesContext`,\n  errorMessage: `useListStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<List />\" `\n});\nvar List = forwardRef(function List2(props, ref) {\n  const styles = useMultiStyleConfig(\"List\", props);\n  const {\n    children,\n    styleType = \"none\",\n    stylePosition,\n    spacing,\n    ...rest\n  } = omitThemingProps(props);\n  const validChildren = getValidChildren(children);\n  const selector = \"& > *:not(style) ~ *:not(style)\";\n  const spacingStyle = spacing ? { [selector]: { mt: spacing } } : {};\n  return /* @__PURE__ */ jsx(ListStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n    chakra.ul,\n    {\n      ref,\n      listStyleType: styleType,\n      listStylePosition: stylePosition,\n      role: \"list\",\n      __css: { ...styles.container, ...spacingStyle },\n      ...rest,\n      children: validChildren\n    }\n  ) });\n});\nList.displayName = \"List\";\nvar OrderedList = forwardRef((props, ref) => {\n  const { as, ...rest } = props;\n  return /* @__PURE__ */ jsx(List, { ref, as: \"ol\", styleType: \"decimal\", marginStart: \"1em\", ...rest });\n});\nOrderedList.displayName = \"OrderedList\";\nvar UnorderedList = forwardRef(function UnorderedList2(props, ref) {\n  const { as, ...rest } = props;\n  return /* @__PURE__ */ jsx(List, { ref, as: \"ul\", styleType: \"initial\", marginStart: \"1em\", ...rest });\n});\nUnorderedList.displayName = \"UnorderedList\";\nvar ListItem = forwardRef(function ListItem2(props, ref) {\n  const styles = useListStyles();\n  return /* @__PURE__ */ jsx(chakra.li, { ref, ...props, __css: styles.item });\n});\nListItem.displayName = \"ListItem\";\nvar ListIcon = forwardRef(function ListIcon2(props, ref) {\n  const styles = useListStyles();\n  return /* @__PURE__ */ jsx(Icon, { ref, role: \"presentation\", ...props, __css: styles.icon });\n});\nListIcon.displayName = \"ListIcon\";\n\nexport {\n  useListStyles,\n  List,\n  OrderedList,\n  UnorderedList,\n  ListItem,\n  ListIcon\n};\n//# sourceMappingURL=chunk-46CXQZ4E.mjs.map","'use client'\n\n// src/link.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Link = forwardRef(function Link2(props, ref) {\n  const styles = useStyleConfig(\"Link\", props);\n  const { className, isExternal, ...rest } = omitThemingProps(props);\n  return /* @__PURE__ */ jsx(\n    chakra.a,\n    {\n      target: isExternal ? \"_blank\" : void 0,\n      rel: isExternal ? \"noopener\" : void 0,\n      ref,\n      className: cx(\"chakra-link\", className),\n      ...rest,\n      __css: styles\n    }\n  );\n});\nLink.displayName = \"Link\";\n\nexport {\n  Link\n};\n//# sourceMappingURL=chunk-K7XRJ7NL.mjs.map"],"names":["_ref","title","description","items","backgroundColor","fontColor","anchor","children","props","React","Box","as","py","base","md","Container","maxW","px","width","mb","Heading","fontSize","fontWeight","Text","color","SimpleGrid","columns","spacing","undefined","length","iconColor","map","value","icon","Icon","boxSize","Array","isArray","Stack","direction","paragraph","bulletPoints","UnorderedList","bulletPoint","ListItem","renderItems","content","Layout","Hero2","heading","lineHeight","subHeading","Section","align","Button","variant","textDecoration","Link","isExternal","href","Head","SEO","ListStylesProvider","useListStyles","name","errorMessage","List","ref","styles","styleType","stylePosition","rest","validChildren","spacingStyle","mt","jsx","listStyleType","listStylePosition","role","__css","container","displayName","marginStart","item","className","target","rel","cx"],"sourceRoot":""}