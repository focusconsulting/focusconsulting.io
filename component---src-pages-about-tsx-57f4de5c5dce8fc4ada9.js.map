{"version":3,"file":"component---src-pages-about-tsx-57f4de5c5dce8fc4ada9.js","mappings":"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","sources":["webpack://focus-consulting/./src/pages/about.tsx","webpack://focus-consulting/./node_modules/@chakra-ui/avatar/dist/chunk-RD3LQCU3.mjs","webpack://focus-consulting/./node_modules/@chakra-ui/avatar/dist/chunk-O25PJXSD.mjs","webpack://focus-consulting/./node_modules/@chakra-ui/avatar/dist/chunk-CXYPMOCL.mjs","webpack://focus-consulting/./node_modules/@chakra-ui/avatar/dist/chunk-V2ATFO44.mjs","webpack://focus-consulting/./node_modules/@chakra-ui/avatar/dist/chunk-V7PAE35Z.mjs","webpack://focus-consulting/./node_modules/@chakra-ui/layout/dist/chunk-W7WUSNWJ.mjs"],"sourcesContent":["import * as React from 'react'\n\nimport {\n    Avatar,\n    Box,\n    Button,\n    Link as ChakraLink,\n    Divider,\n    Heading,\n    SimpleGrid,\n    Stack,\n    Text,\n} from '@chakra-ui/react'\nimport { HeadFC, Link, PageProps } from 'gatsby'\n\nimport Hero2 from '../layout/Hero'\nimport Layout from '../layout/Layout'\nimport { SEO } from '../components/seo'\nimport Section from '../layout/Section'\nimport { focusAreas } from './our-work'\n\nconst content = {\n    heroTitle: 'About Us',\n    heroDescription:\n        'We are a minority-owned digital services company focused on projects with social impact.',\n    sections: [\n        {\n            title: 'Our Story',\n            description:\n                'Focus was founded in 2019 to bring together a diverse set of industry and government experiences, and best-in-class digital services capabilities in agile software development, human-centered design, and DevSecOps. Our projects span work that addresses equity, healthcare, benefits, and learning across government and commercial clients.',\n            backgroundColor: 'white',\n        },\n        {\n            title: 'Core Values',\n            description:\n                'Our values guide both how we work with our colleagues and how we view our partnerships.',\n            backgroundColor: 'gray.50',\n            items: [\n                {\n                    title: 'Clarity and transparency',\n                    description:\n                        'Our jobs involve taking complicated topics and working to remove the ambiguity; our clients rely on us to work and communicate honestly and efficiently.',\n                },\n                {\n                    title: 'Do the right thing',\n                    description:\n                        \"We always come prepared, researching and documenting before raising topics with our clients.  We respect our clients' time by asking questions that get to the root of things faster. \",\n                },\n                {\n                    title: 'Do what you say',\n                    description:\n                        'Our reputation with our clients is critical to our success as a business and that reputation is built by consistently delivering on what we promise to do.',\n                },\n                {\n                    title: 'Exhibit a growth mindset',\n                    description:\n                        'The industry is constantly evolving, and in order to stay relevant we constantly grow our skill sets to serve current and future clients better.',\n                },\n            ],\n        },\n        focusAreas,\n        {\n            title: 'Core Team',\n            description: 'Meet our diverse team of technologists.',\n            backgroundColor: 'gray.50',\n            customId: 'team',\n        },\n    ],\n}\n\nconst team = [\n    {\n        name: 'Japhet Teshale',\n        title: 'Software Engineer',\n        photo: '/images/staff/japhet-teshale.png',\n        department: 'engineering',\n    },\n    {\n        name: 'Eyuel Abebe',\n        title: 'Software Engineer',\n        photo: '/images/staff/eyuel.webp',\n        department: 'engineering',\n    },\n    {\n        name: 'Ant Addis',\n        title: 'CEO',\n        photo: '/images/staff/anteneh-avatar-new-sm.png',\n        link: 'https://www.linkedin.com/in/ant-addis',\n        department: 'leadership',\n    },\n    {\n        name: 'Kolawole Balegun',\n        title: 'Software Engineer',\n        photo: '/images/staff/kola.webp',\n        department: 'engineering',\n    },\n    {\n        name: 'Iverson Diles',\n        title: 'Software Engineer',\n        photo: '/images/staff/iverson-diles.webp',\n        department: 'engineering',\n    },\n    {\n        name: 'Michael Kalish',\n        title: 'CTO',\n        photo: '/images/staff/kalish-profile.webp',\n        link: 'https://www.linkedin.com/in/mqkalish',\n        department: 'leadership',\n    },\n    {\n        name: 'Mike Liu',\n        title: 'Software Engineer',\n        department: 'engineering',\n    },\n    {\n        name: 'Gabriel Dorsch',\n        title: 'Software Engineer',\n        photo: '/images/staff/gabriel.webp',\n        department: 'engineering',\n    },\n    {\n        name: 'Thu Pham',\n        title: 'Software Engineer',\n        department: 'engineering',\n    },\n    {\n        name: 'Jack Wang',\n        title: 'Software Engineer',\n        photo: '/images/staff/jack-wang.webp',\n        department: 'engineering',\n    },\n    {\n        name: 'Kant Kodali',\n        title: 'Software Engineer',\n        photo: '/images/staff/kant_kodali.webp',\n        department: 'engineering',\n    },\n    {\n        name: 'Jamie Albinson',\n        title: 'Software Engineer',\n        photo: '/images/staff/jamie-albinson.webp',\n        department: 'engineering',\n    },\n    {\n        name: 'Yishak Yusuf',\n        title: 'Software Engineer',\n        department: 'engineering',\n    },\n    {\n        name: 'Paul Toner',\n        title: 'Software Engineer',\n        department: 'engineering',\n    },\n    {\n        name: 'Andrew Pham',\n        title: 'Software Engineer',\n        department: 'engineering',\n    },\n    {\n        name: 'Bruk Abebe',\n        title: 'Software Engineer',\n        department: 'engineering',\n    },\n    {\n        name: 'Shijit Dasgupta',\n        title: 'Infrastructure Engineer',\n        department: 'engineering',\n    },\n    {\n        name: 'Nathan Stricker',\n        title: 'Software Engineer',\n        department: 'engineering',\n    },\n    {\n        name: 'Antoine Fillinger',\n        title: 'Software Engineer',\n        department: 'engineering',\n    },\n    {\n        name: 'Stephen Jordan',\n        title: 'Software Engineer',\n        department: 'engineering',\n    },\n    {\n        name: 'Ahmed Saeed',\n        title: 'QA Engineer',\n        department: 'engineering',\n    },\n    {\n        name: 'Sarah Parker',\n        title: 'Product Manager',\n        department: 'product',\n    },\n    {\n        name: 'Mel Woldeyesus',\n        title: 'Business Analyst',\n        department: 'product',\n    },\n    {\n        name: 'Tshering Yudon',\n        title: 'Designer',\n        photo: '/images/staff/tshering-yudon.webp',\n        department: 'design',\n    },\n    {\n        name: 'Jenn Snyder',\n        title: 'Designer',\n        department: 'design',\n    },\n    {\n        name: 'Katherine Kelly',\n        title: 'Designer',\n        department: 'design',\n    },\n    {\n        name: 'Upendra Jejjala',\n        title: 'Product Manager',\n        photo: '/images/staff/upendra-avatar.jpg',\n        department: 'product',\n    },\n]\n\nconst AboutPage: React.FC<PageProps> = () => {\n    const customRenderMap: any = {\n        team: () => {\n            return (\n                <>\n                    {['leadership', 'product', 'design', 'engineering'].map(\n                        (dept: string) => (\n                            <Box marginBottom=\"5\">\n                                <Heading marginBottom=\"10\">\n                                    {dept.charAt(0).toUpperCase() +\n                                        dept.slice(1)}\n                                </Heading>\n                                <SimpleGrid\n                                    columns={{ base: 2, md: 4 }}\n                                    mb={{ base: 12, md: 12 }}\n                                    spacing=\"10\"\n                                >\n                                    {team\n                                        .filter(\n                                            (person) =>\n                                                person.department == dept\n                                        )\n                                        .map((person) => {\n                                            return (\n                                                <Box>\n                                                    <Avatar\n                                                        name={person.name}\n                                                        size={{\n                                                            base: 'xl',\n                                                            md: '2xl',\n                                                        }}\n                                                        mb={2}\n                                                        src={person.photo}\n                                                    />\n                                                    {person.link ? (\n                                                        <Box>\n                                                            <ChakraLink\n                                                                isExternal\n                                                                textDecor={\n                                                                    'underline'\n                                                                }\n                                                                href={\n                                                                    person.link\n                                                                }\n                                                                fontSize={{\n                                                                    base: 'xl',\n                                                                    md: '2xl',\n                                                                }}\n                                                                fontWeight=\"semibold\"\n                                                                mb={1}\n                                                            >\n                                                                {person.name}\n                                                            </ChakraLink>\n                                                        </Box>\n                                                    ) : (\n                                                        <Text\n                                                            fontSize={{\n                                                                base: 'xl',\n                                                                md: '2xl',\n                                                            }}\n                                                            fontWeight=\"semibold\"\n                                                            mb={1}\n                                                        >\n                                                            {person.name}\n                                                        </Text>\n                                                    )}\n                                                    <Text\n                                                        fontSize={{\n                                                            base: 'lg',\n                                                            md: 'xl',\n                                                        }}\n                                                    >\n                                                        {person.title}\n                                                    </Text>\n                                                </Box>\n                                            )\n                                        })}\n                                </SimpleGrid>\n                                <Divider />\n                            </Box>\n                        )\n                    )}\n                </>\n            )\n        },\n        'focus-areas': () => {\n            return (\n                <Stack\n                    justify=\"center\"\n                    px={['0', '11']}\n                    spacing=\"5\"\n                    margin={'auto'}\n                    direction={{ base: 'column', md: 'row' }}\n                >\n                    <Button\n                        variant=\"solid\"\n                        fontSize={{ base: '2xl', md: '2xl' }}\n                        size=\"lg\"\n                        colorScheme=\"blue\"\n                        as={Link}\n                        to=\"/services\"\n                    >\n                        Services & Expertise\n                    </Button>\n                    <Button\n                        variant=\"solid\"\n                        size=\"lg\"\n                        fontSize={{ base: '2xl', md: '2xl' }}\n                        colorScheme=\"blue\"\n                        as={Link}\n                        to=\"/our-work\"\n                    >\n                        Examples of Our Work\n                    </Button>\n                </Stack>\n            )\n        },\n    }\n\n    return (\n        <Layout>\n            <Hero2\n                heading={\n                    <Heading\n                        as=\"h1\"\n                        color=\"white\"\n                        fontSize={{ base: '5xl', md: '7xl' }}\n                        fontWeight={700}\n                        lineHeight={'120%'}\n                        mb=\"6\"\n                    >\n                        {content.heroTitle}\n                    </Heading>\n                }\n                subHeading={content.heroDescription}\n            />\n            {content.sections.map((section) => {\n                return (\n                    <Section\n                        title={section.title}\n                        description={section.description}\n                        backgroundColor={section.backgroundColor}\n                        items={section.items}\n                        anchor={section.anchor}\n                    >\n                        {section.customId &&\n                            customRenderMap[section.customId]()}\n                    </Section>\n                )\n            })}\n        </Layout>\n    )\n}\n\nexport default AboutPage\n\nexport const Head: HeadFC = () => <SEO title=\"Focus - About\" />\n","'use client'\n\n// src/avatar-context.tsx\nimport { createContext } from \"@chakra-ui/react-context\";\nvar [AvatarStylesProvider, useAvatarStyles] = createContext({\n  name: `AvatarStylesContext`,\n  hookName: `useAvatarStyles`,\n  providerName: \"<Avatar/>\"\n});\n\nexport {\n  AvatarStylesProvider,\n  useAvatarStyles\n};\n//# sourceMappingURL=chunk-RD3LQCU3.mjs.map","'use client'\nimport {\n  useAvatarStyles\n} from \"./chunk-RD3LQCU3.mjs\";\n\n// src/avatar-name.tsx\nimport { chakra } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction initials(name) {\n  var _a;\n  const names = name.split(\" \");\n  const firstName = (_a = names[0]) != null ? _a : \"\";\n  const lastName = names.length > 1 ? names[names.length - 1] : \"\";\n  return firstName && lastName ? `${firstName.charAt(0)}${lastName.charAt(0)}` : firstName.charAt(0);\n}\nfunction AvatarName(props) {\n  const { name, getInitials, ...rest } = props;\n  const styles = useAvatarStyles();\n  return /* @__PURE__ */ jsx(chakra.div, { role: \"img\", \"aria-label\": name, ...rest, __css: styles.label, children: name ? getInitials == null ? void 0 : getInitials(name) : null });\n}\nAvatarName.displayName = \"AvatarName\";\n\nexport {\n  initials,\n  AvatarName\n};\n//# sourceMappingURL=chunk-O25PJXSD.mjs.map","'use client'\n\n// src/generic-avatar-icon.tsx\nimport { chakra } from \"@chakra-ui/system\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar GenericAvatarIcon = (props) => /* @__PURE__ */ jsxs(\n  chakra.svg,\n  {\n    viewBox: \"0 0 128 128\",\n    color: \"#fff\",\n    width: \"100%\",\n    height: \"100%\",\n    className: \"chakra-avatar__svg\",\n    ...props,\n    children: [\n      /* @__PURE__ */ jsx(\n        \"path\",\n        {\n          fill: \"currentColor\",\n          d: \"M103,102.1388 C93.094,111.92 79.3504,118 64.1638,118 C48.8056,118 34.9294,111.768 25,101.7892 L25,95.2 C25,86.8096 31.981,80 40.6,80 L87.4,80 C96.019,80 103,86.8096 103,95.2 L103,102.1388 Z\"\n        }\n      ),\n      /* @__PURE__ */ jsx(\n        \"path\",\n        {\n          fill: \"currentColor\",\n          d: \"M63.9961647,24 C51.2938136,24 41,34.2938136 41,46.9961647 C41,59.7061864 51.2938136,70 63.9961647,70 C76.6985159,70 87,59.7061864 87,46.9961647 C87,34.2938136 76.6985159,24 63.9961647,24\"\n        }\n      )\n    ]\n  }\n);\n\nexport {\n  GenericAvatarIcon\n};\n//# sourceMappingURL=chunk-CXYPMOCL.mjs.map","'use client'\nimport {\n  AvatarName\n} from \"./chunk-O25PJXSD.mjs\";\nimport {\n  GenericAvatarIcon\n} from \"./chunk-CXYPMOCL.mjs\";\n\n// src/avatar-image.tsx\nimport { useImage } from \"@chakra-ui/image\";\nimport { chakra } from \"@chakra-ui/system\";\nimport { cloneElement } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction AvatarImage(props) {\n  const {\n    src,\n    srcSet,\n    onError,\n    onLoad,\n    getInitials,\n    name,\n    borderRadius,\n    loading,\n    iconLabel,\n    icon = /* @__PURE__ */ jsx(GenericAvatarIcon, {}),\n    ignoreFallback,\n    referrerPolicy,\n    crossOrigin\n  } = props;\n  const status = useImage({ src, onError, crossOrigin, ignoreFallback });\n  const hasLoaded = status === \"loaded\";\n  const showFallback = !src || !hasLoaded;\n  if (showFallback) {\n    return name ? /* @__PURE__ */ jsx(\n      AvatarName,\n      {\n        className: \"chakra-avatar__initials\",\n        getInitials,\n        name\n      }\n    ) : cloneElement(icon, {\n      role: \"img\",\n      \"aria-label\": iconLabel\n    });\n  }\n  return /* @__PURE__ */ jsx(\n    chakra.img,\n    {\n      src,\n      srcSet,\n      alt: name,\n      onLoad,\n      referrerPolicy,\n      crossOrigin: crossOrigin != null ? crossOrigin : void 0,\n      className: \"chakra-avatar__img\",\n      loading,\n      __css: {\n        width: \"100%\",\n        height: \"100%\",\n        objectFit: \"cover\",\n        borderRadius\n      }\n    }\n  );\n}\nAvatarImage.displayName = \"AvatarImage\";\n\nexport {\n  AvatarImage\n};\n//# sourceMappingURL=chunk-V2ATFO44.mjs.map","'use client'\nimport {\n  AvatarImage\n} from \"./chunk-V2ATFO44.mjs\";\nimport {\n  initials\n} from \"./chunk-O25PJXSD.mjs\";\nimport {\n  AvatarStylesProvider\n} from \"./chunk-RD3LQCU3.mjs\";\nimport {\n  GenericAvatarIcon\n} from \"./chunk-CXYPMOCL.mjs\";\n\n// src/avatar.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { callAllHandlers, cx, dataAttr } from \"@chakra-ui/shared-utils\";\nimport { useState } from \"react\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar baseStyle = {\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  textAlign: \"center\",\n  textTransform: \"uppercase\",\n  fontWeight: \"medium\",\n  position: \"relative\",\n  flexShrink: 0\n};\nvar Avatar = forwardRef((props, ref) => {\n  const styles = useMultiStyleConfig(\"Avatar\", props);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const {\n    src,\n    srcSet,\n    name,\n    showBorder,\n    borderRadius = \"full\",\n    onError,\n    onLoad: onLoadProp,\n    getInitials = initials,\n    icon = /* @__PURE__ */ jsx(GenericAvatarIcon, {}),\n    iconLabel = \" avatar\",\n    loading,\n    children,\n    borderColor,\n    ignoreFallback,\n    crossOrigin,\n    referrerPolicy,\n    ...rest\n  } = omitThemingProps(props);\n  const avatarStyles = {\n    borderRadius,\n    borderWidth: showBorder ? \"2px\" : void 0,\n    ...baseStyle,\n    ...styles.container\n  };\n  if (borderColor) {\n    avatarStyles.borderColor = borderColor;\n  }\n  return /* @__PURE__ */ jsx(\n    chakra.span,\n    {\n      ref,\n      ...rest,\n      className: cx(\"chakra-avatar\", props.className),\n      \"data-loaded\": dataAttr(isLoaded),\n      __css: avatarStyles,\n      children: /* @__PURE__ */ jsxs(AvatarStylesProvider, { value: styles, children: [\n        /* @__PURE__ */ jsx(\n          AvatarImage,\n          {\n            src,\n            srcSet,\n            loading,\n            onLoad: callAllHandlers(onLoadProp, () => {\n              setIsLoaded(true);\n            }),\n            onError,\n            getInitials,\n            name,\n            borderRadius,\n            icon,\n            iconLabel,\n            ignoreFallback,\n            crossOrigin,\n            referrerPolicy\n          }\n        ),\n        children\n      ] })\n    }\n  );\n});\nAvatar.displayName = \"Avatar\";\n\nexport {\n  baseStyle,\n  Avatar\n};\n//# sourceMappingURL=chunk-V7PAE35Z.mjs.map","'use client'\n\n// src/divider.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Divider = forwardRef(function Divider2(props, ref) {\n  const {\n    borderLeftWidth,\n    borderBottomWidth,\n    borderTopWidth,\n    borderRightWidth,\n    borderWidth,\n    borderStyle,\n    borderColor,\n    ...styles\n  } = useStyleConfig(\"Divider\", props);\n  const {\n    className,\n    orientation = \"horizontal\",\n    __css,\n    ...rest\n  } = omitThemingProps(props);\n  const dividerStyles = {\n    vertical: {\n      borderLeftWidth: borderLeftWidth || borderRightWidth || borderWidth || \"1px\",\n      height: \"100%\"\n    },\n    horizontal: {\n      borderBottomWidth: borderBottomWidth || borderTopWidth || borderWidth || \"1px\",\n      width: \"100%\"\n    }\n  };\n  return /* @__PURE__ */ jsx(\n    chakra.hr,\n    {\n      ref,\n      \"aria-orientation\": orientation,\n      ...rest,\n      __css: {\n        ...styles,\n        border: \"0\",\n        borderColor,\n        borderStyle,\n        ...dividerStyles[orientation],\n        ...__css\n      },\n      className: cx(\"chakra-divider\", className)\n    }\n  );\n});\nDivider.displayName = \"Divider\";\n\nexport {\n  Divider\n};\n//# sourceMappingURL=chunk-W7WUSNWJ.mjs.map"],"names":["content","heroTitle","heroDescription","sections","title","description","backgroundColor","items","focusAreas","customId","team","name","photo","department","link","customRenderMap","React","map","dept","Box","marginBottom","Heading","charAt","toUpperCase","slice","SimpleGrid","columns","base","md","mb","spacing","filter","person","Avatar","size","src","ChakraLink","isExternal","textDecor","href","fontSize","fontWeight","Text","Divider","Stack","justify","px","margin","direction","Button","variant","colorScheme","as","Link","to","Layout","Hero2","heading","color","lineHeight","subHeading","section","Section","anchor","Head","SEO","AvatarStylesProvider","useAvatarStyles","hookName","providerName","initials","_a","names","split","firstName","lastName","length","AvatarName","props","getInitials","rest","styles","jsx","role","__css","label","children","displayName","GenericAvatarIcon","jsxs","viewBox","width","height","className","fill","d","AvatarImage","srcSet","onError","onLoad","borderRadius","loading","iconLabel","icon","ignoreFallback","referrerPolicy","crossOrigin","status","cloneElement","alt","objectFit","baseStyle","display","alignItems","justifyContent","textAlign","textTransform","position","flexShrink","ref","isLoaded","setIsLoaded","useState","showBorder","onLoadProp","borderColor","avatarStyles","borderWidth","container","cx","value","borderLeftWidth","borderBottomWidth","borderTopWidth","borderRightWidth","borderStyle","orientation","dividerStyles","vertical","horizontal","border"],"sourceRoot":""}